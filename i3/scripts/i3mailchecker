#!/bin/bash

# Path:        ~/.dotfiles/i3/scripts/i3mailchecker
# Created:     2019-04-21, 00:43    @lenovo
# Last update: 2019-04-29, 12:11:45 @toshiba
# Doc:         alt glyph=""

DECODE=$HOME/.dotfiles/i3/scripts/i3mail-decode.py
MAILBOXES=$HOME/.mail/*/INBOX/new

service_check() {
    last_service=$(
        journalctl --user -b -r -u mbsync.service |\
            awk 'NR<11 && /Succeeded/ {print $2,$1,$3}'
        )
    if [[ -n $last_service ]]; then
        GLYPH=""
    else
        GLYPH=""
        systemctl --user restart mbsync.service
    fi
}

get_date(){
    ls -ltc $1 | sed -n 2p | grep -o "[0-9]\{10\}"
}

new_mail_msg(){
    to=$(awk '/^Delivered-To:/ {$1=""; print}' $1 2>/dev/null)
    to_readable=$($DECODE "$to")
    read  -rd '' to_readable <<< $to_readable
    from=$(awk '/^From:/ {$1=""; print}' $1 2>/dev/null)
    from_readable=$($DECODE "$from")
    subject=$(awk '/^Subject:/ {$1=""; print}' $1 2>/dev/null)
    subject_readable=$($DECODE "$subject")
    [[ -n $from || -n $subject ]] &&\
        notify-send -t 4000 "NEW MAIL ($to_readable)"\
                    "FROM: $from_readable\nSUBJECT: $subject_readable"
}

main() {
    service_check

    count=0
    new=false

    for dir in $MAILBOXES; do
        box=${dir//$HOME\/.mail\//}
        box_name=${box//\/INBOX\/new/}
        last=~/.config/neomutt/lastmail_$box_name

        unread=$(ls $dir | wc -l)
        count=$((count + unread))

        date_first=$(get_date $dir)

        unread_before=$(sed 1q $last )
        date_before=$(sed -n 2p $last)

        [[ -z $date_first ]] && date_first=0

        echo $unread > $last
        echo $date_first >> $last

        if [[ $unread -eq 0 ]]; then
            continue

        elif [[ $unread -gt $unread_before ]]; then
            new=true
            for file in $(ls -ltc $dir | sed /^total/d | awk '{print $8}')
            do
                file_date=$(ls $dir/$file | grep -o "[0-9]\{10\}")
                if [[ $file_date -gt $date_before ]]; then
                    new_mail_msg "$dir/$file"
                else
                    break
                fi
            done
        fi
    done

    if $new; then
        COLOR=$(awk '/^*blue/ {print $2}' $HOME/.Xresources)
        echo "<span fgcolor='$COLOR'>$GLYPH $count</span>"
    else
        echo "$GLYPH $count"
    fi
}

# i3bar click buttons
case $BLOCK_BUTTON in
    1) service_check
       if [[ -n $last_service ]]; then
           notify-send "MAIL" "Last check:\n$last_service"
       else
           notify-send "MAIL" "Synchronization error. Restarting service"
       fi
       pkill -RTMIN+10 i3blocks ;;
    3) mbsync gmail-default; mbsync schole-default ;;
esac

main
