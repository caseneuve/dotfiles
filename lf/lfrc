# -*- mode: sh -*-

  ##      ##  
   #     #  # 
   #     #    
   #    ####  
   #     #    
   #     #    
  ###    #    

#* DOC:
# https://godoc.org/github.com/gokcehan/lf

#* SETTINGS
set previewer ~/.config/lf/scope.sh
map i $~/.config/lf/scope.sh "$f" | less -R

set reverse on
set ratios 1:3:2
set wrapscroll on

#* KBD
#** reload
map R source ~/.config/lf/lfrc
map <c-r> reload

#** enter fish as shell
map w $fish

#** navig
map K half-up
map J half-down
map <a-k> page-up
map <a-j> page-down

map gg
map <lt> top -- []
map <gt> bottom -- []

#** select glob /unselect glob
map sg push :glob-select<space>*.
map su push :glob-unselect<space>*.

#** sort
map st :{{
    set sortby time
    set info time
}}


#** set ratios/preview
map sr :{{
    set nopreview
    set ratios 1:3
}}

map sR :{{
    set reverse!
}}

map sp :{{
    set preview
    set ratios 1:3:2
}}

map s<a-p> :{{
    set preview
    set ratios 1:1:2
}}

map sP :{{
    set preview
    set ratios 1:2
}}

#** commands
map <c-g> cmd-interrupt

#** actions
map ";"
map ";e" $emacsclient -n -a emacs "$f"
map ";c" $echo "$f" | xclip -selection clipboard && notify-send 'lf' "path to <i>$(basename "$f")</i> copied to clipboard"
map ";d" push %mkdir<space>
map ";t" push %touch<space>
map ";m" $~/.dotfiles/bin/sendmail.sh "$fx"

# pdf actions
map apj push $~/.scripts/pdfcut_jam.sh<space>"$f"<space>
map apt $pdftotext -nopgbrk "$f"

# alternative openers
map oz $zathura -- "$fx" &

#* CUSTOM COMMANDS
#** fzf select
map <c-f> $lf -remote "send $id select '$(fzf)'"
map f $lf -remote "send $id select '$(fd . $HOME | fzf)'"

#** custom 'open' command
cmd open ${{
    case $(file --mime-type "$f" -b) in
        application/vnd.oasis.opendocument.text\
            |application/msword\
            |application/vnd.ms-excel\
            |text/rtf)
            libreoffice "$f" & ;;
        text/*)
            $EDITOR "$fx";;
        audio/*)
            /usr/bin/mocp -l -- "$f";;
        image/*)
            sxiv $fx;;
        application/pdf)
            mupdf -- "$f" & ;;
        video/*)
            # bug: mpv blocks lf, disowning/sending to bg doesn't work
            vlc "$f" --quiet & ;;
        # *) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

map <enter> open
map <c-j> open

#** extract
cmd extract ${{
    set -f
    case "$f" in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf "$f";;
        *.tar.gz|*.tgz) tar xzvf "$f";;
        *.tar.xz|*.txz) tar xJvf "$f";;
        *.zip) unzip "$f";;
        *.rar) unrar x "$f";;
        *.7z) 7z x "$f";;
    esac
}}

map E extract "$f"

#** custom 'delete' command
cmd delete %{{
    set -f
    IFS=$'\n' read -a files -d '' <<< "${fx}"
    printf "\e[1;41mdelete ${#files[@]} selected file(s)? [y/n]"
    read ans
    if [ $ans = "y" ]; then
        counter=0
        for file in "${files[@]}"; do
            rm -rf "$file" && counter=$((counter+1))
        done
        printf "\e[1;42mdeleted $counter file(s)"
    else
        printf "\e[1;45mdeletion cancelled"
    fi
}}

map <c-d> delete

#** symlink
cmd symlnk ${{
    set -f
    for file in "$fx"
    do
        ln -s $file .
    done
}}

map L :{{
    symlnk
    unselect
}}

#** custom 'trash' command
$ {{ [ -d ~/.local/share/Trash ] || mkdir -p ~/.local/share/Trash }}
cmd trash $IFS="`printf '\n\t'`"; mv $fx ~/.local/share/Trash

map D trash

#** custom bulk rename
# slightly edited version of script from here: https://github.com/gokcehan/lf/issues/149
cmd bulk-rename ${{
    set '-eu'                     
    index=$(mktemp /tmp/lf-bulk-rename-index.XXXXXXXXXX)
    dir=$(dirname "$f")
    if [ -n "${fs}" ]; then
        echo "$fs" > $index
    else
        # if no files selected, use only file under the cursor
	# echo "$(ls "${dir}" | tr ' ' "\n")" > $index
        echo "$f" > $index
    fi
    sed -i "s|${dir}/||g" $index
    index_edit=$(mktemp /tmp/lf-bulk-rename.XXXXXXXXXX)
    cat $index > $index_edit
    $EDITOR $index_edit
    if [ $(cat $index | wc -l) -eq $(cat $index_edit | wc -l) ]; then
	max=$(($(cat $index | wc -l)+1))
	counter=1
	while [ $counter -le $max ]; do
	    a="$(cat $index | sed "${counter}q;d")"
	    b="$(cat $index_edit | sed "${counter}q;d")"
	    counter=$(($counter+1))
	    
	    [ "$a" = "$b" ] && continue
	    [ -e "$b" ] && echo "File exists: $b" && continue
	    mv "$a" "$b"
	done
    else
	echo "Number of lines must stay the same"
    fi
    rm $index $index_edit
}}

map B bulk-rename

#* FAST DIRS
# >> fast dirs start

map gB $lf -remote "send $id cd ~/biu"
map gC $lf -remote "send $id cd ~/.config"
map gD $lf -remote "send $id cd ~/box/Dropbox/Dokumenty"
map gaa $lf -remote "send $id cd ~/dwl"
map gag $lf -remote "send $id cd ~/dwl/att"
map gcf $lf -remote "send $id cd ~/.config/fish"
map gcl $lf -remote "send $id cd ~/.config/lf"
map gcm $lf -remote "send $id cd ~/.config/neomutt"
map gcn $lf -remote "send $id cd ~/.newsboat"
map gcq $lf -remote "send $id cd ~/.config/qutebrowser"
map gcr $lf -remote "send $id cd ~/.config/ranger"
map gct $lf -remote "send $id cd ~/.config/termite"
map gcx $lf -remote "send $id cd ~/.config/xfce4"
map gdb $lf -remote "send $id cd ~/.dotfiles/bin"
map gdd $lf -remote "send $id cd ~/.dotfiles"
map gdf $lf -remote "send $id cd ~/.dotfiles/fish"
map gdi $lf -remote "send $id cd ~/.dotfiles/i3"
map gdq $lf -remote "send $id cd ~/.dotfiles/qtbro"
map gdr $lf -remote "send $id cd ~/.dotfiles/ranger"
map ged $lf -remote "send $id cd ~/.emacs.d"
map geg $lf -remote "send $id cd ~/git/hub/emacs"
map geh $lf -remote "send $id cd ~/git/hub/heder"
map ggg $lf -remote "send $id cd ~/git"
map ggh $lf -remote "send $id cd ~/git/hub"
map ggl $lf -remote "send $id cd ~/git/lab"
map ggo $lf -remote "send $id cd ~/go"
map ggp $lf -remote "send $id cd ~/git/pkaz"
map ggs $lf -remote "send $id cd ~/git/hub/st"
map gh $lf -remote "send $id cd ~"
map gm $lf -remote "send $id cd ~/muz"
map gob $lf -remote "send $id cd ~/obr"
map goo $lf -remote "send $id cd ~/org"
map gp $lf -remote "send $id cd ~/pdf"
map gsc $lf -remote "send $id cd ~/scr"
map gwe $lf -remote "send $id cd ~/web"
map gws $lf -remote "send $id cd ~/web/schole"
map gwt $lf -remote "send $id cd ~/web/test"
map gww $lf -remote "send $id cd ~/wid"
map gx@ $lf -remote "send $id cd ~/box/Dropbox/Web"
map gxS $lf -remote "send $id cd ~/box/Dropbox/Szkoła/19-20"
map gxb $lf -remote "send $id cd ~/box/Dropbox/Biurko"
map gxc $lf -remote "send $id cd ~/box/Dropbox/.Config"
map gxd $lf -remote "send $id cd ~/box/Dropbox/Dokumenty"
map gxj $lf -remote "send $id cd ~/box/Dropbox/Joby"
map gxp $lf -remote "send $id cd ~/box/Dropbox/Programowanie"
map gxr $lf -remote "send $id cd ~/box/Dropbox/Dokumenty/Projekty"
map gxs $lf -remote "send $id cd ~/box/Dropbox/Szkoła"
map gxw $lf -remote "send $id cd ~/box/Dropbox/Wiki"
map gxx $lf -remote "send $id cd ~/box/Dropbox"

# >> fast dirs end
