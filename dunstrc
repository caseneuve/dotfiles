# -*- mode: conf-space -*-

   #                      #
   #                      #
 ###  #  #  ###    ###   ###
#  #  #  #  #  #  ##      #
#  #  #  #  #  #    ##    #
 ###   ###  #  #  ###      ##

# Path:        ~/.dotfiles/dunstrc
# Last update: 2019-08-01, 15:36:59 @lenovo

#* Global settings
[global]
#** Display behaviour
#  monitor = 0

# Display notification on focused monitor.  Possible modes are:
#   mouse: follow mouse pointer
#   keyboard: follow window with keyboard focus
#   none: don't follow anything
#
# "keyboard" needs a window manager that exports the
# _NET_ACTIVE_WINDOW property.
# This should be the case for almost all modern window managers.
#
# If this option is set to mouse or keyboard, the monitor option
# will be ignored.
follow = mouse

#** Notificaton window properties
#*** The geometry of the window:
#   [{width}]x{height}[+/-{x}+/-{y}]
# The geometry of the message window.
# The height is measured in number of notifications everything else
# in pixels.  If the width is omitted but the height is given
# ("-geometry x2"), the message window expands over the whole screen
# (dmenu-like).  If width is 0, the window expands to the longest
# message displayed.  A positive x is measured from the left, a
# negative from the right side of the screen.  Y is measured from
# the top and down respectively.
# The width can be negative.  In this case the actual width is the
# screen width minus the width defined in within the geometry option.
#geometry = "300x5-20-20"
geometry = "x2-0-1"

# Show how many messages are currently hidden (because of geometry).
indicate_hidden = yes

# Shrink window if it's smaller than the width.  Will be ignored if width is 0.
shrink = yes

#*** The transparency of the window.
# Range: [0; 100].
# This option will only work if a compositing window manager is
# present (e.g. xcompmgr, compiz, etc.).
transparency = 10

#*** Dimensions etc.
# The height of the entire notification.
# If the height is smaller
# than the font height and padding combined, it will be raised
# to the font height and padding.
notification_height = 12

# Draw a line of "separator_height" pixel height between two
# notifications.
# Set to 0 to disable.
#separator_height = 2
separator_height = 0

# Padding between text and separator.
#padding = 10
padding = 3

# Horizontal padding.
#horizontal_padding = 10
horizontal_padding = 10

# Defines width in pixels of frame around the notification window.
# Set to 0 to disable.
#frame_width = 1
frame_width = 0

#*** Frame, separator, sort etc.
# Defines color of the frame around the notification window.
# frame_color = "#ffd700"

# Define a color for the separator.
# possible values are:
#  * auto: dunst tries to find a color fitting to the background;
#  * foreground: use the same color as the foreground;
#  * frame: use the same color as the frame;
#  * anything else will be interpreted as a X color.
separator_color = auto

# Sort messages by urgency.
sort = yes

# Don't remove messages, if the user is idle (no mouse or keyboard input)
# for longer than idle_threshold seconds.
# Set to 0 to disable.
# Transient notifications ignore this setting.
idle_threshold = 120

#** Formatting, font etc.
font = Monospace 8
#font = Inconsolata 11

# The spacing between lines.  If the height is smaller than the
# font height, it will get raised to the font height.
line_height = 0

# Possible values are:
# full: Allow a small subset of html markup in notifications:
#        <b>bold</b>
#        <i>italic</i>
#        <s>strikethrough</s>
#        <u>underline</u>
#
# For a complete reference see <http://developer.gnome.org/pango/stable/PangoMarkupFormat.html>.
#
# strip: This setting is provided for compatibility with some broken
#        clients that send markup even though it's not enabled on the
#        server. Dunst will try to strip the markup but the parsing is
#        simplistic so using this option outside of matching rules for
#        specific applications *IS GREATLY DISCOURAGED*.
#
# no:    Disable markup parsing, incoming notifications will be treated as
#        plain text. Dunst will not advertise that it has the body-markup
#        capability if this is set as a global setting.
#
# It's important to note that markup inside the format option will be arsed
# regardless of what this is set to.
markup = full

# The format of the message.
# Possible variables are:
#   %a  appname
#   %s  summary
#   %b  body
#   %i  iconname (including its path)
#   %I  iconname (without its path)
#   %p  progress value if set ([  0%] to [100%]) or nothing
#   %n  progress value if set without any extra characters
#   %%  Literal %
# Markup is allowed
# format = "<b>%s</b>\n%b\n\n<i>-- %a</i>"
#format = "<b>%s</b>\n%b\n"
format = "<b>%s</b>  %b"

# Alignment of message text.
# Possible values are "left", "center" and "right".
#alignment = left
alignment = left

# Show age of message if message is older than show_age_threshold
# seconds.
# Set to -1 to disable.
show_age_threshold = 60

# Split notifications into multiple lines if they don't fit into
# geometry.
word_wrap = yes

# When word_wrap is set to no, specify where to ellipsize long lines.
# Possible values are "start", "middle" and "end".
ellipsize = middle

# Ignore newlines '\n' in notifications.
ignore_newline = no

# Merge multiple notifications with the same content
stack_duplicates = true

# Hide the count of merged notifications with the same content
hide_duplicate_count = false

# Display indicators for URLs (U) and actions (A).
show_indicators = yes


#** Icons
# Align icons left/right/off
#icon_position = left
icon_position = off

# Scale larger icons down to this size, set to 0 to disable
max_icon_size = 16

# Paths to default icons.
icon_path = /usr/share/icons/Adwaita/16x16/status/:/usr/share/icons/Adwaita/16x16/devices/

#** History
# Should a notification popped up from history be sticky or timeout
# as if it would normally do.
sticky_history = yes

# Maximum amount of notifications kept in history
history_length = 20

#** External apps paths & scripts
dmenu = /usr/bin/dmenu -p dunst:
browser = /usr/bin/qutebrowser
# Always run rule-defined scripts, even if the notification is suppressed
always_run_script = true

#** X properties
title = Dunst
class = Dunst

#** Print a notification on startup.
# This is mainly for error detection, since dbus (re-)starts dunst
# automatically after a crash.
startup_notification = true

#** Legacy
force_xinerama = false

#* Experimental: calculate monitor dpi
# Do not expect them to have a consistent behaviour across releases.
[experimental]
# Calculate the dpi to use on a per-monitor basis.
# If this setting is enabled the Xft.dpi value will be ignored and instead
# dunst will attempt to calculate an appropriate dpi value for each monitor
# using the resolution and physical size. This might be useful in setups
# where there are multiple screens with very different dpi values.
per_monitor_dpi = false

#* KBD
[shortcuts]
# Shortcuts are specified as [modifier+][modifier+]...key
# Available modifiers are "ctrl", "mod1" (the alt-key), "mod2",
# "mod3" and "mod4" (windows-key).
# Xev might be helpful to find names for keys.
close = ctrl+space
close_all = ctrl+shift+space
history = ctrl+grave
context = ctrl+shift+period

#* Urgencies
#** - low
[urgency_low]
background = "#227093"
foreground = "#ffffff"
frame_color = "#227093"
timeout = 8
icon = /usr/share/icons/Adwaita/32x32/status/dialog-question-symbolic.symbolic.png

#** - normal
[urgency_normal]
background = "#96a62d"
foreground = "#101010"
frame_color = "#96a62d"
timeout = 8
icon = /usr/share/icons/Adwaita/32x32/status/dialog-information-symbolic.symbolic.png

#** - critical
[urgency_critical]
background = "#b33939"
foreground = "#ffffff"
frame_color = "#8E2A20"
timeout = 10
icon = /usr/share/icons/Adwaita/32x32/status/dialog-warning-symbolic.symbolic.png

# Every section that isn't one of the above is interpreted as a rules to
# override settings for certain messages.
# Messages can be matched by "appname", "summary", "body", "icon", "category",
# "msg_urgency" and you can override the "timeout", "urgency", "foreground",
# "background", "new_icon" and "format".
# Shell-like globbing will get expanded.

#* SCRIPTING
# You can specify a script that gets run when the rule matches by
# setting the "script" option.
# The script will be called as follows:
#   script appname summary body icon urgency
# where urgency can be "LOW", "NORMAL" or "CRITICAL".
#
# NOTE: if you don't want a notification to be displayed, set the format
# to "".
# NOTE: It might be helpful to run dunst -print in a terminal in order
# to find fitting options for rules.

#[espeak]
#    summary = "*"
#    script = dunst_espeak.sh

#[script-test]
#    summary = "*script*"
#    script = dunst_test.sh

#[ignore]
#    # This notification will not be displayed
#    summary = "foobar"
#    format = ""

#[history-ignore]
#    # This notification will not be saved in history
#    summary = "foobar"
#    history_ignore = yes

#[signed_on]
#    appname = Pidgin
#    summary = "*signed on*"
#    urgency = low
#
#[signed_off]
#    appname = Pidgin
#    summary = *signed off*
#    urgency = low
#
#[says]
#    appname = Pidgin
#    summary = *says*
#    urgency = critical
#
#[twitter]
#    appname = Pidgin
#    summary = *twitter.com*
#    urgency = normal
