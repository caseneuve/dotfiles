#!/bin/bash

# Path:        ~/biurko/bash/queuempv.sh
# Created:     11.07.18, 01:26    @x200
# Last update: 18.07.18, 18:19:08 @x200

# Doc: For now it only allows to append video urls or launching one audio stream per session (no appending) 
# FIXME: poprawiÄ‡ warunki dla audio i video

SOC=/tmp/mpv

MOC_STATUS=$(mocp -i | grep "State:" | sed -e "s/^.*: //")
[[ "$MOC_STATUS" = "PLAY" ]] && mocp -P

#VIDEOP=`echo '{ "command": ["get_property", "video"] }' | socat - $SOC 2>/dev/null | jq .data`

if (( $# > 1 )); then
    len=$(($#-1))
    TARGET="${@: -1}"
    OPT="${@:1:$len}"
else
    TARGET="$1"
fi

[[ $OPT = "--no-video" ]] && MEDIA="Audio from:" || MEDIA="Video:"

# if [[ ! `mpv-socket -s` = "NOT ACTIVE" ]]; then
#     if [[ $OPT = "--no-video" ]]; then
#         MEDIA="Audio from"
#     else
#         MEDIA="Video"
#     fi
# else
#     if [[ $OPT = "--no-video" ]]; then
#         if [[ $VIDEOP = 1 ]]; then
#             notify-send -u critical "Queuempv:
# ---------" "Can't append audio to active video stream!";
#             exit 1;
#         else
#             notify-send -u critical "Queuempv:
# ---------" "Appending video files to audio stream is currently not supported ( #TODO )!";
#             exit 1;
#         fi
#     fi
# fi

if [[ $(mpv-socket -s) = "NOT ACTIVE" ]]; then
#if [[ $(xdotool search --class mpv) ]]; then
    echo "{ \"command\": [ \"loadfile\", \"$TARGET\", \"append-play\" ] }" | socat - $SOC &
    notify-send -u low "Queuempv:
---------" "$MEDIA\n\n`curl $TARGET -so - | grep -iPo '(?<=<title>)(.*)(?=</title>)'`\n\nappended to playlist"
    # echo "loadfile \"$TARGET\" append-play" > /tmp/mp_pipe
    # notify-send -u low "Urlview" "$MEDIA:\n\n<i>`curl -s $TARGET | grep -o \"<title>[^<]*\" | tail -c+8`</i>\n\nis loading."
else
    if [[ $OPT ]]; then
        mpv "$TARGET" --save-position-on-quit --input-ipc-server=$SOC "$OPT" &
        notify-send -u low "Queuempv:
---------" "$MEDIA\n\n`curl $TARGET -so - | grep -iPo '(?<=<title>)(.*)(?=</title>)'`\n\n is loading."
        # [[ -e /tmp/mp_pipe ]] || mkfifo /tmp/mp_pipe
        # --input-file=/tmp/mp_pipe "$TARGET" &
        # notify-send -u low "Urlview" "$MEDIA:\n\n<i>`curl -s $TARGET | grep -o \"<title>[^<]*\" | tail -c+8`</i>\n\nis loading."
    else
        mpv "$TARGET" --save-position-on-quit --input-ipc-server=$SOC &
        notify-send -u low "Queuempv:
---------" "$MEDIA\n\n`curl $TARGET -so - | grep -iPo '(?<=<title>)(.*)(?=</title>)'`\n\nis loading."
    fi
fi

