#!/bin/bash

# Path:        ~/.dotfiles/i3/scripts/i3uedder
# Created:     2019-03-25, 10:13    @lenovo
# Last update: 2019-03-30, 23:31:31 @toshiba
# Doc:
# Todo:        28/03/2019, condition when no wifi

SUNFILE=/tmp/suntimes
SCRIPT=$HOME/git/lab/sunapi/sunapi.sh

ensure_data() {
    if [[ -f $SUNFILE ]]; then
        if [[ ! $(date +'%Y-%m-%d') ==\
                $(awk '/today:/ {print $2}' $SUNFILE) ]]
        then
            $SCRIPT > $SUNFILE
        fi
    else
        $SCRIPT > $SUNFILE
    fi
}

forecast() {
    OUTPUT=$($HOME/git/lab/sunapi/openweather.sh "$@")
    LOCATION=$(echo "$OUTPUT" | awk '/location/ {print $2}')
    DESCRIPTION=$(echo "$OUTPUT" | awk '/description/ {$1=""; print $0}')
    TEMPERATURE=$(echo "$OUTPUT" | awk '/temperature/ {$1=""; print $0}')
}

what_time_is_it() {
    RISE=$(awk '/sunrise/ {print $2}' $SUNFILE)
    SET=$(awk '/sunset/ {print $2}' $SUNFILE)
    TWILIGHT=$(awk '/twilight/ {print $2}' $SUNFILE)
    TIME=$(date +'%H:%M:%S')

    if [[ $TIME > $TWILIGHT ]] || [[ $TIME < $RISE ]]; then
        NIGHT=true
    else
        NIGHT=false
    fi
}

set_icon() {
    night_or_day() {
        $NIGHT && INDICATOR=$1 || INDICATOR=$2
    }

    case "$DESCRIPTION" in
        *sunny*|*clear*) night_or_day "ï††" "ï†…";;
        *cloudy*|*overcast*) INDICATOR="ïƒ‚";;
        *rain*) INDICATOR="â˜”";;
        *snow*) INDICATOR="ï‹œ";;
        *mist*|*fog*) INDICATOR="ðŸŒ«";;
        *) night_or_day "ï††" "ï†…" ;;
    esac
    [[ -n $OUTPUT ]] && echo $INDICATOR
}

main(){
    ensure_data
    forecast "$@"
    what_time_is_it
    set_icon
    case $BLOCK_BUTTON in
        #1 = Left, 2 = Middle, 3 = Right, 4 = Scroll Up, 5 = Scroll Down
        1) notify-send \
               -t 6000 \
               "Weather for $LOCATION" \
               "$DESCRIPTION\n$TEMPERATURE\n ï†…  $RISE\n ï††  $SET" \
                 && pkill -RTMIN+5 i3blocks ;;
        *) pkill -RTMIN+5 i3blocks ;;
    esac
}

main "$@"
