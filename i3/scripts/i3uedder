#!/bin/bash

# Path:        ~/.dotfiles/i3/scripts/i3uedder
# Created:     2019-03-25, 10:13    @lenovo
# Last update: 2019-05-03, 13:08:41 @x200
# Doc:         Display sun & weather info in i3bar(blocks)
# Requires:    Cronjob advised
# Todo:        28/03/2019, condition when no wifi

LOC_FILE=$HOME/.config/sunapi/.loc
SUNFILE=/tmp/suntimes
FORECAST=/tmp/forecast
SUNTIMES=$HOME/git/lab/sunapi/sunapi.sh       # run this script as cronjob after midnight
WEATHER=$HOME/git/lab/sunapi/openweather.sh   # --"-- (e.g.) every 15 mins
ICON=/usr/share/icons/Adwaita/16x16/status/weather-few-clouds-symbolic.symbolic.png

if [[ -f $LOC_FILE ]]; then
    ARGS=$(
        grep "city:\|latitude:\|logitude:" $LOC_FILE \
            | sed 's/city:/-q/g;s/latitude:/-a/g;s/longitude:/-o/g' \
            | tr '\n' ' '
        )
else
    ARGS="$@"
fi

ensure_data() {
    if [[ -f $SUNFILE ]]; then
        if [[ ! $(date +'%Y-%m-%d') ==\
                $(awk '/today:/ {print $2}' $SUNFILE) ]]
        then
            $SUNTIMES > $SUNFILE
        fi
    else
        $SUNTIMES > $SUNFILE
    fi
}

forecast() {
    [[ ! -f $FORECAST ]] && $WEATHER $@ > $FORECAST
    LAST_CHECK=$(sed 1q $FORECAST)
    LOCATION=$(awk '/location/ {print $2}' $FORECAST)
    DESCRIPTION=$(awk '/description/ {$1=""; print $0}' $FORECAST | sed 's/^ //')
    TEMPERATURE=$(awk '/temperature/ {$1=""; print $0}' $FORECAST | sed 's/^ //')
}

what_time_is_it() {
    RISE=$(awk '/sunrise/ {print $2}' $SUNFILE)
    SET=$(awk '/sunset/ {print $2}' $SUNFILE)
    TWILIGHT=$(awk '/twilight/ {print $2}' $SUNFILE)
    TIME=$(date +'%H:%M:%S')

    if [[ $TIME > $TWILIGHT ]] || [[ $TIME < $RISE ]]; then
        NIGHT=true
    else
        NIGHT=false
    fi
}

set_icon() {
    night_or_day() {
        $NIGHT && INDICATOR=$1 || INDICATOR=$2
    }

    case "$DESCRIPTION" in
        *sunny*|*clear*) night_or_day "" "";;
        *cloudy*|*overcast*|*clouds*) INDICATOR="";;
        *rain*) INDICATOR="☔";;
        *snow*) INDICATOR="";;
        *mist*|*fog*) INDICATOR="🌫";;
        *) night_or_day "" "" ;;
    esac
    [[ -f $FORECAST ]] && echo $INDICATOR || echo ❓
}

main(){
    ensure_data
    forecast $@
    what_time_is_it
    set_icon
    case $BLOCK_BUTTON in
        #1 = Left, 2 = Middle, 3 = Right, 4 = Scroll Up, 5 = Scroll Down
        1) notify-send -t 6000 -i $ICON \
                       "Weather for $LOCATION" \
                       "$DESCRIPTION\n$TEMPERATURE\n   $RISE\n   $SET\n(last check: $LAST_CHECK)" \
                 && pkill -RTMIN+5 i3blocks ;;
        *) $WEATHER $@ > $FORECAST && pkill -RTMIN+5 i3blocks ;;
    esac
}

main "$ARGS"
